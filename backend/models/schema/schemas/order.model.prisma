enum OrderStatus {
  PENDING
  CANCELED
  ACCEPTED
  REJECTED
  DELIVERING
  DELIVERED
  RECEIVED
  COMPLETED
  RETURNED
}

model Order {
  orderId         Int         @id @default(autoincrement())
  customerId      Int?
  shopId          Int?
  customerNumber  String?
  shippingAddress String
  transProviderId Int?
  status          OrderStatus @default(PENDING)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  shippingFee Float
  totalAmount Float

  customer               UserProfile?            @relation(fields: [customerId], references: [userId], onDelete: SetNull)
  shop                   Shop?                   @relation(fields: [shopId], references: [shopOwnerId], onDelete: SetNull)
  transportationProvider TransportationProvider? @relation(fields: [transProviderId], references: [providerId], onDelete: SetNull)
  orderProducts          OrderDetail[]
  returnSlip             ReturnSlip[]
  reviews                Review[]
}

model OrderDetail {
  orderId           Int
  orderDetailNumber Int 
  productId         Int
  color             String?
  size              String?
  quantity          Int
  price             Float

  @@id([orderId, orderDetailNumber])
  @@unique([orderId, productId, color, size])

  order Order @relation(fields: [orderId], references: [orderId], onDelete: Restrict)

  review Review?
}


enum ReturnStatus {
  ACCEPTED
  REJECTED
}

model ReturnSlip {
  returnId  Int           @id @default(autoincrement())
  orderId   Int
  createdAt DateTime      @default(now())
  status    ReturnStatus?
  reason    String?

  order Order @relation(fields: [orderId], references: [orderId], onDelete: Restrict)
}