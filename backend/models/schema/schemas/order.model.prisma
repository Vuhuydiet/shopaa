model Order {
  orderId                Int                     @id @default(autoincrement())
  customerId             Int?
  shopId                 Int?
  shippingAddress        String
  transProviderId        Int?
  status                 OrderStatus             @default(PENDING)
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt
  shippingFee            Float
  totalAmount            Float
  customer               UserProfile?            @relation(fields: [customerId], references: [userId])
  shop                   Shop?                   @relation(fields: [shopId], references: [shopOwnerId])
  transportationProvider TransportationProvider? @relation(fields: [transProviderId], references: [providerId])
  orderProducts          OrderDetail[]
  returnSlip             ReturnSlip[]
}

model OrderDetail {
  orderId   Int
  productId Int
  color     String?
  size      String?
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [orderId], onDelete: Cascade)

  @@id([orderId, productId])
}

model ReturnSlip {
  returnId  Int           @id @default(autoincrement())
  orderId   Int
  createdAt DateTime      @default(now())
  status    ReturnStatus?
  reason    String?
  order     Order         @relation(fields: [orderId], references: [orderId], onDelete: Cascade)
}

enum OrderStatus {
  PENDING
  CANCELED
  ACCEPTED
  REJECTED
  DELIVERING
  DELIVERED
  RECEIVED
  COMPLETED
  RETURNED
}

enum ReturnStatus {
  ACCEPTED
  REJECTED
}
